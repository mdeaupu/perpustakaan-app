/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package main;

import java.awt.event.KeyEvent;
import java.sql.Statement; 
import java.sql.ResultSet; 
import java.sql.SQLException; 
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import javax.swing.JOptionPane; 
import javax.swing.table.DefaultTableModel; 
import javax.swing.table.TableColumn;
import main.koneksi;
import static main.koneksi.con;

/**
 *
 * @author Hp
 */
public class JFrameRoleUser extends javax.swing.JFrame {
    public String roleid = "";
    public DefaultTableModel model;
    
    /**
     * Creates new form JFrameRoleUser
     */
    public JFrameRoleUser() {
        initComponents();
        HeaderTable();
    }

    public void HeaderTable() {
        model = new DefaultTableModel();
        tableRole.setModel(model);
        model.addColumn("id"); 
        model.addColumn("nama role"); 
        model.addColumn("date create"); 
        model.addColumn("date modify");
        DataToTable();
        AturKolom();
    }
    
    public void DataToTable() {
        model.getDataVector().removeAllElements();
        model.fireTableDataChanged();
        try {
            Statement stat=(Statement)koneksi.GetKoneksi().createStatement();
            String sql=" select * from trole";
            ResultSet rs =stat.executeQuery(sql);
            while(rs.next()) {
                Object[] fieldx=new Object[4];
                fieldx[0]=rs.getString("IdRole");
                fieldx[1]=rs.getString("NamaRole");
                fieldx[2]=rs.getString("DateCreate");
                fieldx[3]=rs.getString("DateModify");
                model.addRow(fieldx);
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
    }
    
    private void bersihkantextfiled() { 
        txtNamaRole.setText(""); 
    }
    
    
    public void AturKolom() {
        TableColumn kolom;
        tableRole.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF); 
        kolom = tableRole.getColumnModel().getColumn(0); 
        kolom.setPreferredWidth(75); 
        kolom = tableRole.getColumnModel().getColumn(1); 
        kolom.setPreferredWidth(200);
        kolom = tableRole.getColumnModel().getColumn(2); 
        kolom.setPreferredWidth(150);
        kolom = tableRole.getColumnModel().getColumn(3); 
        kolom.setPreferredWidth(150);
    }


    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tableRole = new javax.swing.JTable();
        btnSimpan = new javax.swing.JButton();
        btnHapus = new javax.swing.JButton();
        btnKeluar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtNamaRole = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        tableRole.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tableRole.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableRoleMouseClicked(evt);
            }
        });
        tableRole.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tableRoleKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(tableRole);

        btnSimpan.setBackground(new java.awt.Color(0, 102, 255));
        btnSimpan.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnSimpan.setForeground(new java.awt.Color(255, 255, 255));
        btnSimpan.setText("SIMPAN");
        btnSimpan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSimpanActionPerformed(evt);
            }
        });

        btnHapus.setBackground(new java.awt.Color(255, 0, 0));
        btnHapus.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnHapus.setForeground(new java.awt.Color(255, 255, 255));
        btnHapus.setText("HAPUS");
        btnHapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHapusActionPerformed(evt);
            }
        });

        btnKeluar.setBackground(new java.awt.Color(0, 0, 0));
        btnKeluar.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnKeluar.setForeground(new java.awt.Color(255, 255, 255));
        btnKeluar.setText("KELUAR");
        btnKeluar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnKeluarActionPerformed(evt);
            }
        });

        jLabel1.setText("Nama Role");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabel2.setText("ROLE USER");

        txtNamaRole.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNamaRoleActionPerformed(evt);
            }
        });
        txtNamaRole.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtNamaRoleKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtNamaRoleKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(40, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnSimpan)
                        .addGap(18, 18, 18)
                        .addComponent(btnHapus)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnKeluar))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(txtNamaRole, javax.swing.GroupLayout.PREFERRED_SIZE, 372, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(38, 38, 38))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(44, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtNamaRole, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSimpan)
                    .addComponent(btnHapus)
                    .addComponent(btnKeluar))
                .addContainerGap(50, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnSimpanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSimpanActionPerformed
        // TODO add your handling code here:
        String namarole = txtNamaRole.getText();
        try {
            Statement strU=con.createStatement();
            Statement strI=con.createStatement();
            Statement str =con.createStatement();
            LocalDateTime now = LocalDateTime.now();
            DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd HH:mm:ss");
            String formattedDateTime = "'" + now.format(formatter) + "'";
            String sql = "select * from trole where IdRole='"+ roleid +"'";
            ResultSet rs=str.executeQuery(sql);
            if (rs.next()) {
                if (roleid.trim().isEmpty()) {
                    JOptionPane.showMessageDialog(this, "IdROle tidak boleh Kosong, data tidak berhadil disimpan!", "Peringatan", JOptionPane.WARNING_MESSAGE);
                    txtNamaRole.requestFocus();
                    return;
                }
                roleid = rs.getString("roleid");
                String sqlUpdate = "update trole set DateModify="+ formattedDateTime +",NamaRole='"+ txtNamaRole.getText() +"' where IdRole='"+ roleid+"'";
                strU.executeUpdate(sqlUpdate);
                JOptionPane.showMessageDialog(null, "Data berhasil di Ubah", "Update", JOptionPane.INFORMATION_MESSAGE);
            } else {
                String sqlInsert = "insert into trole (NamaRole,DateCreate,DateModify) values('"+namarole+"',"+formattedDateTime+","+formattedDateTime+")";
                strI.executeUpdate(sqlInsert);
                JOptionPane.showMessageDialog(null, "Data berhasil di Simpan", "Insert", JOptionPane.INFORMATION_MESSAGE);
            }
            bersihkantextfiled();
            txtNamaRole.requestFocus();
            HeaderTable();
            roleid = "";
            txtNamaRole.setText("");
            txtNamaRole.requestFocus();
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
    }//GEN-LAST:event_btnSimpanActionPerformed

    private void txtNamaRoleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNamaRoleActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNamaRoleActionPerformed

    private void btnKeluarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnKeluarActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_btnKeluarActionPerformed

    private void txtNamaRoleKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNamaRoleKeyReleased
        // TODO add your handling code here: 
        try {
            Statement strU=con.createStatement();
            Statement strI=con.createStatement();
            Statement str =con.createStatement();
            String sql = "SELECT IdRole, NamaRole FROM trole WHERE NamaRole ='"+txtNamaRole.getText()+"'";
            ResultSet rs=str.executeQuery(sql);
            if(rs.next()) {
                if(txtNamaRole.getText().equals(rs.getString("NamaRole"))) {
                    roleid = rs.getString("IdRole");
                }
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
        
    }//GEN-LAST:event_txtNamaRoleKeyReleased

    private void tableRoleMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableRoleMouseClicked
        // TODO add your handling code here:
        txtNamaRole.setText(model.getValueAt(tableRole.getSelectedRow(),1).toString());
        roleid=model.getValueAt(tableRole.getSelectedRow(),0).toString();
    }//GEN-LAST:event_tableRoleMouseClicked

    private void btnHapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHapusActionPerformed
        // TODO add your handling code here:
        if (txtNamaRole.getText().trim().isEmpty() ) {
            JOptionPane.showMessageDialog(this, "rolename tidak boleh Kosong, data gagal dihapus!", "Peringatan", JOptionPane.WARNING_MESSAGE);
            txtNamaRole.requestFocus();
            return;
        }
        
        if (JOptionPane.showConfirmDialog(this, "Apakah Yakin Akan di Hapus?", "Informasi", JOptionPane.INFORMATION_MESSAGE) == JOptionPane.OK_OPTION) {
            try {
                Statement strU=con.createStatement(); 
                Statement strI=con.createStatement(); 
                Statement str =con.createStatement();
                String sql = "SELECT COUNT(*) FROM trole WHERE NamaRole ='"+txtNamaRole.getText()+"'";
                ResultSet rs=str.executeQuery(sql); 
                if (rs.next() && rs.getInt(1) > 0) {
                    String sqlDelete = "DELETE FROM trole WHERE IdRole = '"+roleid+"' OR NamaRole='" +txtNamaRole.getText()+"'";
                    str.executeUpdate(sqlDelete);
                    JOptionPane.showMessageDialog(this, "Data berhasil Dihapus", "Sukses", JOptionPane.INFORMATION_MESSAGE);
                    bersihkantextfiled();
                    HeaderTable();
                    txtNamaRole.requestFocus();
                } else {
                    JOptionPane.showMessageDialog(this, "Data dengan Kode User tersebut tidak ditemukan.", "Informasi", JOptionPane.INFORMATION_MESSAGE);
                }
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(this, "Delete data gagal\n" + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_btnHapusActionPerformed

    private void txtNamaRoleKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNamaRoleKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode()==KeyEvent.VK_ENTER) {
            btnSimpan.requestFocus();
        }  
    }//GEN-LAST:event_txtNamaRoleKeyPressed

    private void tableRoleKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tableRoleKeyReleased
        // TODO add your handling code here:
         txtNamaRole.setText(model.getValueAt(tableRole.getSelectedRow(),1).toString());
         roleid=model.getValueAt(tableRole.getSelectedRow(),0).toString();
    }//GEN-LAST:event_tableRoleKeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JFrameRoleUser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JFrameRoleUser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JFrameRoleUser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JFrameRoleUser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JFrameRoleUser().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnHapus;
    private javax.swing.JButton btnKeluar;
    private javax.swing.JButton btnSimpan;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tableRole;
    private javax.swing.JTextField txtNamaRole;
    // End of variables declaration//GEN-END:variables
}
